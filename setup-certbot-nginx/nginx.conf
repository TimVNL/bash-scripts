user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 1024;
	multi_accept on;
	use epoll;
}

http {

	## Basic Settings

	# Sends the nginx version in the server header
	server_tokens off;

	# Override some buffer limitations, will prevent DDOS too.
	client_body_buffer_size 10K;
	client_header_buffer_size 1k;
	client_max_body_size 8m;
	large_client_header_buffers 2 1k;

	# Timeouts
	client_body_timeout 12;
	client_header_timeout 12;
	keepalive_timeout 15;
	send_timeout 10;

	# Sendfile copies data between one FD and other from within the kernel.
	# More efficient than read() + write(), since the requires transferring
	# data to and from the user space.
	sendfile on;

	# Tcp_nopush causes nginx to attempt to send its HTTP response head in one
	# packet, instead of using partial frames. This is useful for prepending
	# headers before calling sendfile, or for throughput optimization.
	tcp_nopush on;

	# Don't buffer data-sends (disable Nagle algorithm). Good for sending
	# frequent small bursts of data in real time.
	tcp_nodelay on;

	# Internal parameter to speed up hashtable lookups
	types_hash_max_size 2048;

	# Don't show that we are using nginx for extra security
	server_tokens off;
	server_name_in_redirect off;
  more_set_headers 'Server: My Very Own Server';

  # server_names_hash_bucket_size 64;

	# Default mime type mapping (from extensions)
	include /etc/nginx/mime.types;

	# Mime default if the previous mapping fails
	default_type application/octet-stream;

	## Logging Settings

	access_log off;
	error_log /var/log/nginx/error.log;

	## Virtual Host Configs

	include /etc/nginx/conf.d/*.conf;
}
